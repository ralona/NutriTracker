version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: nutritracker-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-nutritracker}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-nutritracker_pass}
      POSTGRES_DB: ${DB_NAME:-nutritracker_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-nutritracker}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nutritracker-network

  # Redis for session storage
  redis:
    image: redis:7-alpine
    container_name: nutritracker-redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nutritracker-network

  # Node.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: nutritracker-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: postgresql://${DB_USER:-nutritracker}:${DB_PASSWORD:-nutritracker_pass}@postgres:5432/${DB_NAME:-nutritracker_db}
      REDIS_URL: redis://redis:6379
      SESSION_SECRET: ${SESSION_SECRET:-nutritrack-secret-key-dev}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY:-}
      PORT: 5000
    volumes:
      - ./server:/app/server
      - ./client:/app/client
      - ./shared:/app/shared
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./vite.config.ts:/app/vite.config.ts
      - ./drizzle.config.ts:/app/drizzle.config.ts
      - /app/node_modules
    ports:
      - "3000:5000"
    networks:
      - nutritracker-network
    command: npm run dev

  # Database migrations
  migrate:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: nutritracker-migrate
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://${DB_USER:-nutritracker}:${DB_PASSWORD:-nutritracker_pass}@postgres:5432/${DB_NAME:-nutritracker_db}
    volumes:
      - ./server:/app/server
      - ./shared:/app/shared
      - ./drizzle.config.ts:/app/drizzle.config.ts
      - ./migrations:/app/migrations
    networks:
      - nutritracker-network
    command: npm run db:push
    profiles:
      - setup

  # PGAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: nutritracker-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@nutritracker.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - nutritracker-network
    profiles:
      - tools

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  nutritracker-network:
    driver: bridge